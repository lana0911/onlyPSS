<template lang="pug">
main

  article.login-box
    
    .login-logo
      img(src="@img/twm/loginname.png" alt="")

    el-form(
      :model="formData"
      ref="loginForm"
      :rules="formRules"
      hide-required-asterisk
    )
      //- el-form-item(
      //-   label="登入類型"
      //-   prop="region"
      //- )
      //-   el-select(
      //-     v-model="formData.region" 
      //-     placeholder="請選擇類型"
      //-   )
      //-     el-option(
      //-       v-for="item in loginTypes"
      //-       :key="item.id"
      //-       :label="item.title" 
      //-       :value="item.id"
      //-     )
      el-form-item(
        label="Account"
        prop="username"
      )
        el-input(
          v-model="formData.username"
          type="text"
          @keyup.native.enter="checkValidate"
          placeholder="請填入帳號"
        )
      el-form-item(
        label="Password"
        prop="password"
      )
        el-input(
          v-model="formData.password"
          type="password"
          @keyup.native.enter="checkValidate"
          placeholder="請填入密碼"
        )
      //- el-button( 
      //-   type="success" 
      //-   @click="checkValidate"
      //- )
      button.btn-12( 
        type="success" 
        @click="checkValidate"
      )
        span Welcome
        span Login 

</template>

<script>
import {
  defineComponent,
  onMounted,
  reactive,
  ref,
  computed,
  nextTick,
} from 'vue'
import { useStore } from 'vuex'
import { getRules } from '@mixins/panelsMixin'
import authApi from '@api/auth'

import router from '@router'
import { registerRouter } from '@router'
import { updateLocalStorgeToken } from '@/utils'

export default defineComponent({
  name: 'Login',
  setup() {
    const store = useStore()
    const defaultpage = computed(() => store.state.user.defaultpage)
    const loginForm = ref(null)
    const formData = reactive({
      // region: '',
      username: '',
      password: '',
    })

    const formRules = getRules(formData)

    const loginTypes = [
      {
        id: 1,
        title: 'local',
      },
    ]

    const checkValidate = () => {
      loginForm.value.validate((valid) => {
        if (valid) {
          submit()
        }
      })
    }

    const submit = async () => {
      try {
        const response = await authApi.login(formData)

        if (response.access_token) {
          updateLocalStorgeToken(response)
          await registerRouter()
          await store.dispatch('app/getUsedThmem')
          await nextTick()
          const nextPage = defaultpage.value ? '/BackStage' : '/dashboard'
          router.push({ path: nextPage })
        } else {
          alert('無回傳access_token')
        }
      } catch {
        //path
      }
    }

    onMounted(() => {
      store.dispatch('dashboard/resetFramework')
    })

    return {
      formData,
      loginTypes,
      checkValidate,
      loginForm,
      formRules,
    }
  },
})
</script>

<style lang="sass" scoped>

main
  background-image: url(~@img/twm/bg6.png)
  min-height: 100vh
  background-size: cover
  background-position: center
  background-repeat: no-repeat
  overflow: hidden
  +flex-center
  flex-direction: column
  .login-box
    width: 22%
    position: absolute
    right: 17%
    .login-logo
      margin-bottom: 3rem
    .login-slogan
      padding: 0 10px
      margin-bottom: 3rem
      +flex-center
      img
        width: 70%
  :deep(.el-form-item)
    display: flex
    flex-direction: row
    align-items: center
    background-color: rgba(224, 224, 224, 0.2)
    height: 65px
    width: 410px
    border-radius: 0.5rem
    border: 2px solid #7f7e7e
    margin-left: 50px
  
    .el-form-item__label
      padding: 0.375rem 0.75rem
      font-size: 1rem
      font-weight: 800
      color: #ec5d05
      width: 90px
      letter-spacing: 0
      text-align: center
    .el-form-item__content
      flex: 1
    .el-form-item__error
      padding: 4px 15px 0
    .el-select
      width: 100%
      border-left: 1px solid #d8dbe0
    .el-input__inner
      background-color: transparent
      border: none
      color: rgb(0 0 0 / 90%)
      font-weight: 700
      font-size: initial
  .el-form-item:hover
    border-radius: 0.5rem 
  .el-button
    +size(100%,35px)
    background-color: #00796B
    border: 1px solid rgb(50, 31, 219)
//  /* 12 */
.btn-12
  background: none
  border: none
  position: relative
  right: 20px
  bottom: 20px
  border:none
  box-shadow: none
  width: 130px
  margin-left: 50%
  height: 40px
  line-height: 42px
  -webkit-perspective: 230px
  perspective: 230px

.btn-12 span 
  background: rgb(0,172,238)
  background: linear-gradient(3deg, #ffc56e 0%, #ff6303 100%)
  display: block
  position: absolute
  width: 130px
  height: 40px
  box-shadow: inset 2px 2px 2px 0px rgba(255,255,255,.5), 7px 7px 20px 0px rgba(0,0,0,.1), 4px 4px 5px 0px rgba(0,0,0,.1)
  border-radius: 5px
  margin:0
  font-size:18px
  color: #fff
  font-weight: 550
  text-align: center
  -webkit-box-sizing: border-box
  -moz-box-sizing: border-box
  box-sizing: border-box
  -webkit-transition: all .3s
  transition: all .3s

.btn-12 span:nth-child(1) 
  box-shadow:-7px -7px 20px 0px #fff9, -4px -4px 5px 0px #fff9,7px 7px 20px 0px #0002, 4px 4px 5px 0px #0001
  -webkit-transform: rotateX(90deg)
  -moz-transform: rotateX(90deg)
  transform: rotateX(90deg)
  -webkit-transform-origin: 50% 50% -20px
  -moz-transform-origin: 50% 50% -20px
  transform-origin: 50% 50% -20px

.btn-12 span:nth-child(2) 
  -webkit-transform: rotateX(0deg)
  -moz-transform: rotateX(0deg)
  transform: rotateX(0deg)
  -webkit-transform-origin: 50% 50% -20px
  -moz-transform-origin: 50% 50% -20px
  transform-origin: 50% 50% -20px

.btn-12:hover span:nth-child(1) 
  box-shadow: inset 2px 2px 2px 0px rgba(255,255,255,.5),7px 7px 20px 0px rgba(0,0,0,.1),4px 4px 5px 0px rgba(0,0,0,.1)
  -webkit-transform: rotateX(0deg)
  -moz-transform: rotateX(0deg)
  transform: rotateX(0deg)

.btn-12:hover span:nth-child(2) 
  box-shadow: inset 2px 2px 2px 0px rgba(255,255,255,.5),  7px 7px 20px 0px rgba(0,0,0,.1), 4px 4px 5px 0px rgba(0,0,0,.1)
  color: transparent
  -webkit-transform: rotateX(-90deg)
  -moz-transform: rotateX(-90deg)
  transform: rotateX(-90deg)
  


</style>
